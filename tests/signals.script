Script started on Sun 08 Mar 2015 01:40:11 PM PDT
[01;32mdr1zz1tdudden@dr1zz1tdudden-VirtualBox[01;34m ~/Documents/rshell $[00m bin/rshell
/home/dr1zz1tdudden/Documents/rshell $ # Part I: trs  est finding and executing commands
/home/dr1zz1tdudden/Documents/rshell $ 
/home/dr1zz1tdudden/Documents/rshell $ # from /usr/bin
/home/dr1zz1tdudden/Documents/rshell $ g which rgrep
/usr/bin/rgrep
/home/dr1zz1tdudden/Documents/rshell $ rgrep --help
Usage: grep [OPTION]... PATTERN [FILE]...
Search for PATTERN in each FILE or standard input.
PATTERN is, by default, a basic regular expression (BRE).
Example: grep -i 'hello world' menu.h main.c

Regexp selection and interpretation:
  -E, --extended-regexp     PATTERN is an extended regular expression (ERE)
  -F, --fixed-strings       PATTERN is a set of newline-separated fixed strings
  -G, --basic-regexp        PATTERN is a basic regular expression (BRE)
  -P, --perl-regexp         PATTERN is a Perl regular expression
  -e, --regexp=PATTERN      use PATTERN for matching
  -f, --file=FILE           obtain PATTERN from FILE
  -i, --ignore-case         ignore case distinctions
  -w, --word-regexp         force PATTERN to match only whole words
  -x, --line-regexp         force PATTERN to match only whole lines
  -z, --null-data           a data line ends in 0 byte, not newline

Miscellaneous:
  -s, --no-messages         suppress error messages
  -v, --invert-match        select non-matching lines
  -V, --version             print version information and exit
      --help                display this help and exit
      --mmap                deprecated no-op; evokes a warning

Output control:
  -m, --max-count=NUM       stop after NUM matches
  -b, --byte-offset         print the byte offset with output lines
  -n, --line-number         print line number with output lines
      --line-buffered       flush output on every line
  -H, --with-filename       print the file name for each match
  -h, --no-filename         suppress the file name prefix on output
      --label=LABEL         use LABEL as the standard input file name prefix
  -o, --only-matching       show only the part of a line matching PATTERN
  -q, --quiet, --silent     suppress all normal output
      --binary-files=TYPE   assume that binary files are TYPE;
                            TYPE is 'binary', 'text', or 'without-match'
  -a, --text                equivalent to --binary-files=text
  -I                        equivalent to --binary-files=without-match
  -d, --directories=ACTION  how to handle directories;
                            ACTION is 'read', 'recurse', or 'skip'
  -D, --devices=ACTION      how to handle devices, FIFOs and sockets;
                            ACTION is 'read' or 'skip'
  -r, --recursive           like --directories=recurse
  -R, --dereference-recursive  likewise, but follow all symlinks
      --include=FILE_PATTERN  search only files that match FILE_PATTERN
      --exclude=FILE_PATTERN  skip files and directories matching FILE_PATTERN
      --exclude-from=FILE   skip files matching any file pattern from FILE
      --exclude-dir=PATTERN  directories that match PATTERN will be skipped.
  -L, --files-without-match  print only names of FILEs containing no match
  -l, --files-with-matches  print only names of FILEs containing matches
  -c, --count               print only a count of matching lines per FILE
  -T, --initial-tab         make tabs line up (if needed)
  -Z, --null                print 0 byte after FILE name

Context control:
  -B, --before-context=NUM  print NUM lines of leading context
  -A, --after-context=NUM   print NUM lines of trailing context
  -C, --context=NUM         print NUM lines of output context
  -NUM                      same as --context=NUM
      --color[=WHEN],
      --colour[=WHEN]       use markers to highlight the matching strings;
                            WHEN is 'always', 'never', or 'auto'
  -U, --binary              do not strip CR characters at EOL (MSDOS/Windows)
  -u, --unix-byte-offsets   report offsets as if CRs were not there
                            (MSDOS/Windows)

'egrep' means 'grep -E'.  'fgrep' means 'grep -F'.
Direct invocation as either 'egrep' or 'fgrep' is deprecated.
When FILE is -, read standard input.  With no FILE, read . if a command-line
-r is given, - otherwise.  If fewer than two FILEs are given, assume -h.
Exit status is 0 if any line is selected, 1 otherwise;
if any error occurs and -q is not given, the exit status is 2.

Report bugs to: bug-grep@gnu.org
GNU Grep home page: <http://www.gnu.org/software/grep/>
General help using GNU software: <http://www.gnu.org/gethelp/>
/home/dr1zz1tdudden/Documents/rshell $ # from /usr/sbin
/home/dr1zz1tdudden/Documents/rshell $ which apr
/home/dr1zz1tdudden/Documents/rshell $ # oops wrong command. try agian
/home/dr1zz1tdudden/Documents/rshell $ which arp
/usr/sbin/arp
/home/dr1zz1tdudden/Documents/rshell $ arp --help
Usage:
  arp [-vn]  [<HW>] [-i <if>] [-a] [<hostname>]             <-Display ARP cache
  arp [-v]          [-i <if>] -d  <host> [pub]               <-Delete ARP entry
  arp [-vnD] [<HW>] [-i <if>] -f  [<filename>]            <-Add entry from file
  arp [-v]   [<HW>] [-i <if>] -s  <host> <hwaddr> [temp]            <-Add entry
  arp [-v]   [<HW>] [-i <if>] -Ds <host> <if> [netmask <nm>] pub          <-''-

        -a                       display (all) hosts in alternative (BSD) style
        -s, --set                set a new ARP entry
        -d, --delete             delete a specified entry
        -v, --verbose            be verbose
        -n, --numeric            don't resolve names
        -i, --device             specify network interface (e.g. eth0)
        -D, --use-device         read <hwaddr> from given device
        -A, -p, --protocol       specify protocol family
        -f, --file               read new entries from file or from /etc/ethers

  <HW>=Use '-H <hw>' to specify hardware address type. Default: ether
  List of possible hardware types (which support ARP):
    ash (Ash) ether (Ethernet) ax25 (AMPR AX.25) 
    netrom (AMPR NET/ROM) rose (AMPR ROSE) arcnet (ARCnet) 
    dlci (Frame Relay DLCI) fddi (Fiber Distributed Data Interface) hippi (HIPPI) 
    irda (IrLAP) x25 (generic X.25) eui64 (Generic EUI-64) 
/home/dr1zz1tdudden/Documents/rshell $ # from /bin
/home/dr1zz1tdudden/Documents/rshell $ which ls
/bin/ls
/home/dr1zz1tdudden/Documents/rshell $ ls
bin  LICENSE  Makefile	README.md  src	string.cpp  test.cpp  tests
/home/dr1zz1tdudden/Documents/rshell $ 
/home/dr1zz1tdudden/Documents/rshell $ # try absolute path
/home/dr1zz1tdudden/Documents/rshell $ /bin/ls
bin  LICENSE  Makefile	README.md  src	string.cpp  test.cpp  tests
/home/dr1zz1tdudden/Documents/rshell $ # relative path
/home/dr1zz1tdudden/Documents/rshell $ l bin/ls # myh v    version of ls
[34;1mbin[m
LICENSE[m
Makefile[m
README.md[m
[34;1msrc[m
string.cpp[m
test.cpp[m
[34;1mtests[m
/home/dr1zz1tdudden/Documents/rshell $ 
/home/dr1zz1tdudden/Documents/rshell $ # command that does not exist
/home/dr1zz1tdudden/Documents/rshell $ kdskdskl
kdskdskl: No such file or directory
/home/dr1zz1tdudden/Documents/rshell $ # relative path that does not exist
/home/dr1zz1tdudden/Documents/rshell $ gargar/kldskl
execv: No such file or directory
/home/dr1zz1tdudden/Documents/rshell $ # absolue te path that does not exist
/home/dr1zz1tdudden/Documents/rshell $ /bin/dkldskl
execv: No such file or directory
/home/dr1zz1tdudden/Documents/rshell $ 
/home/dr1zz1tdudden/Documents/rshell $ # executable that I don't have permissions for
/home/dr1zz1tdudden/Documents/rshell $ chmod a-x bin/ls
/home/dr1zz1tdudden/Documents/rshell $ bin/ls
execv: Permission denied
/home/dr1zz1tdudden/Documents/rshell $ 
/home/dr1zz1tdudden/Documents/rshell $ # check that children processes have access to unchnged $Path variable
/home/dr1zz1tdudden/Documents/rshell $ bin/rshell
/home/dr1zz1tdudden/Documents/rshell $ printenv PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
/home/dr1zz1tdudden/Documents/rshell $ exit
/home/dr1zz1tdudden/Documents/rshell $ 
/home/dr1zz1tdudden/Documents/rshell $ 
/home/dr1zz1tdudden/Documents/rshell $ # Part II: test CTRL+C
/home/dr1zz1tdudden/Documents/rshell $ 
/home/dr1zz1tdudden/Documents/rshell $ # no program running
/home/dr1zz1tdudden/Documents/rshell $ ^C^C^C
/home/dr1zz1tdudden/Documents/rshell $ # sh  while program is running wi aiting for input
/home/dr1zz1tdudden/Documents/rshell $ cat
^C/home/dr1zz1tdudden/Documents/rshell $ # while program is running and outputting
/home/dr1zz1tdudden/Documents/rshell $ ls -R /
/:
bin   cdrom  etc   initrd.img  lib32  lost+found  mnt  proc  run   srv	tmp  var
boot  dev    home  lib	       lib64  media	  opt  root  sbin  sys	usr  vmlinuz

/bin:
bash		      fgrep	  nc.openbsd		   setfont
bunzip2		      findmnt	  netcat		   setupcon
busybox		      fuser	  netstat		   sh
bzcat		      fusermount  nisdomainname		   sh.distrib
bzcmp		      getfacl	  ntfs-3g		   sleep
bzdiff		      grep	  ntfs-3g.probe		   ss
bzegrep		      gunzip	  ntfs-3g.secaudit	   static-sh
bzexe		      gzexe	  ntfs-3g.usermap	   stty
bzfgrep		      gzip	  ntfscat		   su
bzgrep		      hostname	  ntfsck		   sync
bzip2		      ip	  ntfscluster		   tailf
bzip2recover	      kbd_mode	  ntfscmp		   tar
bzless		      keyctl	  ntfsdump_logfile	   tempfile
bzmore		      kill	  ntfsfix		   touch
cat		      kmod	  ntfsinfo		   true
chacl		      less	  ntfsls		   udevadm
chgrp		      lessecho	  ntfsmftalloc		   ulockmgr_server
chmod		      lessfile	  ntfsmove		   umount
chown		      lesskey	  ntfstruncate		   uname
chvt		      lesspipe	  ntfswipe		   uncompress
cp		      ln	  open			   unicode_start
cpio		      loadkeys	  openvt		   vdir
dash		      login	  pidof			   vmmouse_detect
date		      loginctl	  ping			   which
dbus-cleanup-sockets  lowntfs-3g  ping6			   whiptail
dbus-daemon	      ls	  plymouth		   ypdomainname
dbus-uuidgen	      lsblk	  plymouth-upstart-bridge  zcat
dd		      lsmod	  ps			   zcmp
df		      mkdir	  pwd			   zdiff
dir		      mknod	  rbash			   zegrep
dmesg		      mktemp	  readlink		   zfgrep
dnsdomainname	      more	  red			   zforce
domainname	      mount	  rm			   zgrep
dumpkeys	      mountpoint  rmdir			   zless
echo		      mt	  rnano			   zmore
ed		      mt-gnu	  running-in-container	   znew
egrep		      mv	  run-parts
false		      nano	  sed
fgconsole	      nc	  setfacl

/boot:
abi-3.13.0-24-generic	  initrd.img-3.13.0-24-generic	memtest86+_multiboot.bin
config-3.13.0-24-generic  memtest86+.bin		System.map-3.13.0-24-generic
grub			  memtest86+.elf		vmlinuz-3.13.0-24-generic

/boot/grub:
fonts  gfxblacklist.txt  grub.cfg  grubenv  i386-pc  locale

/boot/grub/fonts:
^C/home/dr1zz1tdudden/Documents/rshell $ # I hope you were able to parse through that test  xt.
/home/dr1zz1tdudden/Documents/rshell $ # Maybe I will cut some of it out of the final script file for brevity
/home/dr1zz1tdudden/Documents/rshell $ 
/home/dr1zz1tdudden/Documents/rshell $ 
/home/dr1zz1tdudden/Documents/rshell $ 
/home/dr1zz1tdudden/Documents/rshell $ # Part III: test cd
/home/dr1zz1tdudden/Documents/rshell $ 
/home/dr1zz1tdudden/Documents/rshell $ # show that command prop mpt correctly shows current working directory
/home/dr1zz1tdudden/Documents/rshell $ pwd
/home/dr1zz1tdudden/Documents/rshell
/home/dr1zz1tdudden/Documents/rshell $ 
/home/dr1zz1tdudden/Documents/rshell $ # test cd
/home/dr1zz1tdudden/Documents/rshell $ cd ..
/home/dr1zz1tdudden/Documents $ pwd
/home/dr1zz1tdudden/Documents
/home/dr1zz1tdudden/Documents $ printenv PWD
/home/dr1zz1tdudden/Documents
/home/dr1zz1tdudden/Documents $ # as you can see, cd correctly changes working directory,
/home/dr1zz1tdudden/Documents $ # which is reflected in command prompt,
/home/dr1zz1tdudden/Documents $ # and successfully updates $PWD environment variable
/home/dr1zz1tdudden/Documents $ 
/home/dr1zz1tdudden/Documents $ # will show again for changing to another relative pah th
/home/dr1zz1tdudden/Documents $ cd rshell/src
/home/dr1zz1tdudden/Documents/rshell/src $ pwd
/home/dr1zz1tdudden/Documents/rshell/src
/home/dr1zz1tdudden/Documents/rshell/src $ printenv PWD
/home/dr1zz1tdudden/Documents/rshell/src
/home/dr1zz1tdudden/Documents/rshell/src $ 
/home/dr1zz1tdudden/Documents/rshell/src $ # test on absolute path
/home/dr1zz1tdudden/Documents/rshell/src $ cd /home/dr1zz1tdudden
/home/dr1zz1tdudden $ pwd
/home/dr1zz1tdudden
/home/dr1zz1tdudden $ printenv PWD
/home/dr1zz1tdudden
/home/dr1zz1tdudden $ 
/home/dr1zz1tdudden $ # test on no args passed to cd
/home/dr1zz1tdudden $ cd
cd: usage: cd directory
/home/dr1zz1tdudden $ pwd
/home/dr1zz1tdudden
/home/dr1zz1tdudden $ printenv PWD
/home/dr1zz1tdudden
/home/dr1zz1tdudden $ # test on multiple args passed to d cd
/home/dr1zz1tdudden $ cd Documents Downloads Public Pictures
/home/dr1zz1tdudden/Documents $ pwd
/home/dr1zz1tdudden/Documents
/home/dr1zz1tdudden/Documents $ printenv PWD
/home/dr1zz1tdudden/Documents
/home/dr1zz1tdudden/Documents $ test      
/home/dr1zz1tdudden/Documents $ # test on .
/home/dr1zz1tdudden/Documents $ cd .
/home/dr1zz1tdudden/Documents $ pwd
/home/dr1zz1tdudden/Documents
/home/dr1zz1tdudden/Documents $ printenv W PWD
/home/dr1zz1tdudden/Documents
/home/dr1zz1tdudden/Documents $ 
/home/dr1zz1tdudden/Documents $ test on directory that does not exist
/usr/bin/test: extra argument ‘directory’
/home/dr1zz1tdudden/Documents $ # oops that was supposedto be a comment av bove. Moving on:
/home/dr1zz1tdudden/Documents $ cd dlkskldskldsfkdk
chdir: No such file or directory
/home/dr1zz1tdudden/Documents $ pwd
/home/dr1zz1tdudden/Documents
/home/dr1zz1tdudden/Documents $ printenv PWD
/home/dr1zz1tdudden/Documents
/home/dr1zz1tdudden/Documents $ 
/home/dr1zz1tdudden/Documents $ # Part IV: testing cd with connectors and piping and IO redirection
/home/dr1zz1tdudden/Documents $ 
/home/dr1zz1tdudden/Documents $ # semicolon
/home/dr1zz1tdudden/Documents $ echo hello; cd rshell
hello
/home/dr1zz1tdudden/Documents/rshell $ pwd
/home/dr1zz1tdudden/Documents/rshell
/home/dr1zz1tdudden/Documents/rshell $ printenv PWD
/home/dr1zz1tdudden/Documents/rshell
/home/dr1zz1tdudden/Documents/rshell $ cd ..; echo hello
hello
/home/dr1zz1tdudden/Documents $ pwd
/home/dr1zz1tdudden/Documents
/home/dr1zz1tdudden/Documents $ printenv PWD
/home/dr1zz1tdudden/Documents
/home/dr1zz1tdudden/Documents $ 
/home/dr1zz1tdudden/Documents $ # oh yeah, before we continue I forgot one test case for PART III:
/home/dr1zz1tdudden/Documents $ # using cd on a directory I don;t have permission on
/home/dr1zz1tdudden/Documents $ mkdir folder
/home/dr1zz1tdudden/Documents $ ls -l 
total 96
-rwxr-xr-x  1 dr1zz1tdudden dr1zz1tdudden  9455 Jan 23 22:09 a.out
drwxr-xr-x  2 dr1zz1tdudden dr1zz1tdudden  4096 Mar  8 14:39 folder
drwxr-xr-x 14 dr1zz1tdudden dr1zz1tdudden  4096 Sep 19 16:12 ghc-7.4.2
drwxr-xr-x  4 dr1zz1tdudden dr1zz1tdudden  4096 Jan 15 13:33 gitlearn
drwxr-xr-x  7 dr1zz1tdudden dr1zz1tdudden  4096 Nov  2 19:43 glowing-wookie
drwxr-xr-x  6 dr1zz1tdudden dr1zz1tdudden  4096 Nov  5 19:24 MagicMirror
-rw-r--r--  1 dr1zz1tdudden dr1zz1tdudden   368 Jan 23 22:09 main.cpp
drwxr-xr-x  6 dr1zz1tdudden dr1zz1tdudden  4096 Jan 29 13:30 Octave
-rw-r--r--  1 dr1zz1tdudden dr1zz1tdudden   163 Oct 23 22:30 octave-workspace
drwxr-xr-x  3 dr1zz1tdudden dr1zz1tdudden  4096 Mar  3 15:01 rapache
-rw-r--r--  1 dr1zz1tdudden dr1zz1tdudden  3001 Nov  2 14:33 RSA.cpp
-rwxr-xr-x  1 dr1zz1tdudden dr1zz1tdudden 29920 Nov  2 14:33 RSA.out
drwxr-xr-x  6 dr1zz1tdudden dr1zz1tdudden  4096 Mar  6 15:36 rshell
drwxr-xr-x  5 dr1zz1tdudden dr1zz1tdudden  4096 Oct 13 08:34 typespeed
drwxr-xr-x 10 dr1zz1tdudden dr1zz1tdudden  4096 Mar  1 11:28 ucr-cs100
/home/dr1zz1tdudden/Documents $ chmod a-rwx
/bin/chmod: missing operand after ‘a-rwx’
Try '/bin/chmod --help' for more information.
/home/dr1zz1tdudden/Documents $ chmodchmod      a-rwx folder
/home/dr1zz1tdudden/Documents $ cd folder
chdir: Permission denied
/home/dr1zz1tdudden/Documents $ pwd
/home/dr1zz1tdudden/Documents
/home/dr1zz1tdudden/Documents $ printenv PWD
/home/dr1zz1tdudden/Documents
/home/dr1zz1tdudden/Documents $ 
/home/dr1zz1tdudden/Documents $ # now back to connectors & piping & io redirection
/home/dr1zz1tdudden/Documents $ 
/home/dr1zz1tdudden/Documents $ 
/home/dr1zz1tdudden/Documents $ # && connector
/home/dr1zz1tdudden/Documents $ true && cd rshell
/home/dr1zz1tdudden/Documents/rshell $ pwd
/home/dr1zz1tdudden/Documents/rshell
/home/dr1zz1tdudden/Documents/rshell $ false && cd ..
/home/dr1zz1tdudden/Documents/rshell $ pwd
/home/dr1zz1tdudden/Documents/rshell
/home/dr1zz1tdudden/Documents/rshell $ # || connc ector
/home/dr1zz1tdudden/Documents/rshell $ true || cd ..
/home/dr1zz1tdudden/Documents/rshell $ pwd
/home/dr1zz1tdudden/Documents/rshell
/home/dr1zz1tdudden/Documents/rshell $ flas   alse || cd ..
/home/dr1zz1tdudden/Documents $ pw
pw: No such file or directory
/home/dr1zz1tdudden/Documents $ pwd
/home/dr1zz1tdudden/Documents
/home/dr1zz1tdudden/Documents $ # put connectors together with cd
/home/dr1zz1tdudden/Documents $ cd ..; false || cd Documents && echo hello
hello
/home/dr1zz1tdudden/Documents $ pwd
/home/dr1zz1tdudden/Documents
/home/dr1zz1tdudden/Documents $ cd kdskl || it fa     echo it failed && cd rshell/src; echo new folder
chdir: No such file or directory
it failed
new folder
/home/dr1zz1tdudden/Documents/rshell/src $ pwd
/home/dr1zz1tdudden/Documents/rshell/src
/home/dr1zz1tdudden/Documents/rshell/src $ 
/home/dr1zz1tdudden/Documents/rshell/src $ # now input redirection
/home/dr1zz1tdudden/Documents/rshell/src $ cd .. < ls.cpp
/home/dr1zz1tdudden/Documents/rshell/src $ pwd
/home/dr1zz1tdudden/Documents/rshell/src
/home/dr1zz1tdudden/Documents/rshell/src $ # so unlike bash, it does not change directore ies, but it also doesn't crash :)
/home/dr1zz1tdudden/Documents/rshell/src $ # output redirection
/home/dr1zz1tdudden/Documents/rshell/src $ cd .. > newfile
/home/dr1zz1tdudden/Documents/rshell/src $ ls
cp.cpp	ls.cpp	main.cpp  newfile  Timer.h
/home/dr1zz1tdudden/Documents/rshell/src $ cat newfile
/home/dr1zz1tdudden/Documents/rshell/src $ # so created file like bash but did not change directore ies  , unlike bash
/home/dr1zz1tdudden/Documents/rshell/src $ rm newfile
/home/dr1zz1tdudden/Documents/rshell/src $ 
/home/dr1zz1tdudden/Documents/rshell/src $ # input and output redirection
/home/dr1zz1tdudden/Documents/rshell/src $ cd .. < ls.cpp >newfile
/home/dr1zz1tdudden/Documents/rshell/src $ ls
cp.cpp	ls.cpp	main.cpp  newfile  Timer.h
/home/dr1zz1tdudden/Documents/rshell/src $ pwd
/home/dr1zz1tdudden/Documents/rshell/src
/home/dr1zz1tdudden/Documents/rshell/src $ # again doesn;t change directories
/home/dr1zz1tdudden/Documents/rshell/src $ 
/home/dr1zz1tdudden/Documents/rshell/src $ 
/home/dr1zz1tdudden/Documents/rshell/src $ # piping
/home/dr1zz1tdudden/Documents/rshell/src $ cd .. | cat
/home/dr1zz1tdudden/Documents/rshell/src $ pwd
/home/dr1zz1tdudden/Documents/rshell/src
/home/dr1zz1tdudden/Documents/rshell/src $ # so again, it didn't change directories, but that is acu=t   tually what bash does, too!
/home/dr1zz1tdudden/Documents/rshell/src $ echo hello | cd ..
/home/dr1zz1tdudden/Documents/rshell/src $ pwd
/home/dr1zz1tdudden/Documents/rshell/src
/home/dr1zz1tdudden/Documents/rshell/src $ 
/home/dr1zz1tdudden/Documents/rshell/src $ # multiple pipes
/home/dr1zz1tdudden/Documents/rshell/src $ echo hello world | tr a-z A-Z | cd ..
/home/dr1zz1tdudden/Documents/rshell/src $ pwd
/home/dr1zz1tdudden/Documents/rshell/src
/home/dr1zz1tdudden/Documents/rshell/src $ echo hello world | cd .. | tr a-z A-z Z |  
/home/dr1zz1tdudden/Documents/rshell/src $ pwd
/home/dr1zz1tdudden/Documents/rshell/src
/home/dr1zz1tdudden/Documents/rshell/src $ cd .. | echo hello world | tr a-z A-Z
HELLO WORLD
/home/dr1zz1tdudden/Documents/rshell/src $ pwd
/home/dr1zz1tdudden/Documents/rshell/src
/home/dr1zz1tdudden/Documents/rshell/src $ 
/home/dr1zz1tdudden/Documents/rshell/src $ # pipes with IO redirection
/home/dr1zz1tdudden/Documents/rshell/src $ # first let's create a simple file
/home/dr1zz1tdudden/Documents/rshell/src $ echo Simple file Test > file
/home/dr1zz1tdudden/Documents/rshell/src $ cat file
Simple file Test
/home/dr1zz1tdudden/Documents/rshell/src $ # now run tests
/home/dr1zz1tdudden/Documents/rshell/src $ cat < file | tr a-z A-Z | cd .. > file2
/home/dr1zz1tdudden/Documents/rshell/src $ pwd
/home/dr1zz1tdudden/Documents/rshell/src
/home/dr1zz1tdudden/Documents/rshell/src $ ls
cp.cpp	file  file2  ls.cpp  main.cpp  newfile	Timer.h
/home/dr1zz1tdudden/Documents/rshell/src $ cat < file | cd .. | tra  a-z A-Z > file3
/home/dr1zz1tdudden/Documents/rshell/src $ ls
cp.cpp	file  file2  file3  ls.cpp  main.cpp  newfile  Timer.h
/home/dr1zz1tdudden/Documents/rshell/src $ pwd
/home/dr1zz1tdudden/Documents/rshell/src
/home/dr1zz1tdudden/Documents/rshell/src $ cd .. < file | echo hello | tr a-z A-Z > file4
/home/dr1zz1tdudden/Documents/rshell/src $ pwd
/home/dr1zz1tdudden/Documents/rshell/src
/home/dr1zz1tdudden/Documents/rshell/src $ cat file4
HELLO
/home/dr1zz1tdudden/Documents/rshell/src $ 
/home/dr1zz1tdudden/Documents/rshell/src $ 
/home/dr1zz1tdudden/Documents/rshell/src $ # end tests
/home/dr1zz1tdudden/Documents/rshell/src $ 
/home/dr1zz1tdudden/Documents/rshell/src $ exit
[01;32mdr1zz1tdudden@dr1zz1tdudden-VirtualBox[01;34m ~/Documents/rshell $[00m exit
Script done on Sun 08 Mar 2015 03:14:15 PM PDT
